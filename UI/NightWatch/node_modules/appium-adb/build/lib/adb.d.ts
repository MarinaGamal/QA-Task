import { getAndroidBinaryPath } from './tools';
import { getSdkRootFromEnv } from './helpers';
import { StringRecord } from '@appium/types';
import type Logcat from './logcat';
declare const DEFAULT_ADB_PORT = 5037;
export declare const DEFAULT_OPTS: {
    readonly sdkRoot: string | undefined;
    readonly executable: {
        readonly path: "adb";
        readonly defaultArgs: readonly [];
    };
    readonly tmpDir: string;
    readonly binaries: {};
    readonly jars: {};
    readonly adbPort: 5037;
    readonly adbExecTimeout: 20000;
    readonly remoteAppsCacheLimit: 10;
    readonly allowOfflineDevices: false;
    readonly allowDelayAdb: true;
};
export interface ADBOptions {
    sdkRoot?: string;
    udid?: string;
    appDeviceReadyTimeout?: number;
    useKeystore?: boolean;
    keystorePath?: string;
    keystorePassword?: string;
    keyAlias?: string;
    keyPassword?: string;
    executable: ADBExecutable;
    tmpDir?: string;
    curDeviceId?: string;
    emulatorPort?: number;
    logcat?: Logcat;
    binaries?: StringRecord;
    instrumentProc?: string;
    suppressKillServer?: boolean;
    jars?: StringRecord;
    adbPort?: number;
    adbHost?: string;
    adbExecTimeout?: number;
    remoteAppsCacheLimit?: number;
    buildToolsVersion?: string;
    allowOfflineDevices?: boolean;
    allowDelayAdb?: boolean;
    remoteAdbHost?: string;
    remoteAdbPort?: number;
    clearDeviceLogsOnStart?: boolean;
    emPort?: number;
}
export interface ADBExecutable {
    path: string;
    defaultArgs: string[];
}
export declare class ADB {
    adbHost?: string;
    adbPort?: number;
    executable: ADBExecutable;
    constructor(opts?: Partial<ADBOptions>);
    /**
     * Create a new instance of `ADB` that inherits configuration from this `ADB` instance.
     * This avoids the need to call `ADB.createADB()` multiple times.
     * @param opts - Additional options mapping to pass to the `ADB` constructor.
     * @returns The resulting class instance.
     */
    clone(opts?: Partial<ADBOptions>): ADB;
    static createADB(opts: Partial<ADBOptions>): Promise<ADB>;
}
export { DEFAULT_ADB_PORT, getAndroidBinaryPath, getSdkRootFromEnv };
//# sourceMappingURL=adb.d.ts.map