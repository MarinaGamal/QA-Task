version: 2.1

orbs:
  node: circleci/node@4.7
  browser-tools: circleci/browser-tools@1.4.1

executors:
  my-executor:
    docker:
      - image: cimg/node:lts-browsers

jobs:
  RunServerAPI:
    executor: my-executor
    working_directory: ~/QA-Task/API/MockUser

    steps:
      - checkout:
          path: ~/QA-Task
      - run:
          name: "Install Mock-User-Auth and Supertest"
          command: |
            npm install mock-user-auth
            npm install supertest --save-dev
            npm install --save-dev mocha
            npm install --save-dev mochawesome
            npm install nodemon --save-dev
      - run:
          name: "Start Mock-User-Auth server"
          background: true
          command: |
            sudo chmod +x node_modules/mock-user-auth/bin/www.js
            npm run dev
            # Capture server IP and port
            SERVER_IP=$(ifconfig eth0 | grep 'inet ' | awk '{print $2}')
            SERVER_PORT=3000

            # Set environment variables
            echo "export SERVER_IP=${SERVER_IP}" >> $BASH_ENV
            echo "export SERVER_PORT=${SERVER_PORT}" >> $BASH_ENV

      - persist_to_workspace:
          root: ~/QA-Task
          paths:
            - API/MockUser

  ExecuteAPI:
    executor: my-executor
    working_directory: ~/QA-Task/API/MockUser

    steps:
      - attach_workspace:
          at: ~/QA-Task
      - run:
          name: "Execute API tests"
          command: |
            # Read environment variables from the workspace
            source $BASH_ENV

            chmod +x node_modules/.bin/mocha
            # Access the server using the captured details
            echo "Connecting to server at ${SERVER_IP}:${SERVER_PORT}"
            sleep 30
            npx mocha api.test.js --port $SERVER_PORT
          when: always
      - store_artifacts:
          path: API/MockUser/mochawesome-report/



  ContactUs:
    docker:
      -  image: cimg/node:lts-browsers
    working_directory: ~/QA-Task/UI/NightWatch
    steps:
      - checkout:
          path: ~/QA-Task

      - browser-tools/install-chrome
      - node/install-packages   

      - run:
          name: Run Contact Us
          command: 
            npx nightwatch test/MyStore/ContactUs.js

      - store_artifacts:
          path: tests_output/

  SearchDress:
    docker:
      -  image: cimg/node:lts-browsers
    working_directory: ~/QA-Task/UI/NightWatch
    steps:
      - checkout:
          path: ~/QA-Task      
      - browser-tools/install-chrome
      - node/install-packages 

      - run:
          name: Run Search Dress
          command: 
            npx nightwatch test/MyStore/SearchDress.js
      - store_artifacts:
          path: tests_output/

workflows:
  test:
    jobs:
      - RunServerAPI
      - ExecuteAPI:
          requires:
          - RunServerAPI
      - SearchDress
      - ContactUs

